services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rampart-postgres
    environment:
      POSTGRES_USER: rampart
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rampart_dev_password}
      POSTGRES_DB: rampart
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rampart"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rampart-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rampart-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://rampart:${POSTGRES_PASSWORD:-rampart_dev_password}@postgres:5432/rampart
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production-min-32-chars-long}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-secret-key-change-in-production-min-32}
      - KEY_ENCRYPTION_SECRET=${KEY_ENCRYPTION_SECRET:-dev-encryption-key-change-in-production-32-chars}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:3001}
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rampart-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # Jaeger all-in-one for tracing (UI at http://localhost:16686)
  jaeger:
    image: jaegertracing/all-in-one:1.56
    container_name: rampart-jaeger
    ports:
      - "16686:16686"   # Jaeger UI
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true

volumes:
  postgres_data:
  redis_data:
